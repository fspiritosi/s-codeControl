
create table "public"."assing_customer" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "customer_id" uuid not null,
    "employee_id" uuid not null,
    "equipment_id" uuid not null
);


alter table "public"."assing_customer" enable row level security;

create table "public"."contacts" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "contact_name" text,
    "constact_email" text,
    "contact_phone" bigint,
    "contact_charge" text,
    "company_id" uuid,
    "customer_id" uuid,
    "is_active" boolean default true
);


alter table "public"."contacts" enable row level security;

create table "public"."customers" (
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "cuit" bigint not null,
    "client_email" text not null,
    "client_phone" bigint,
    "address" text,
    "id" uuid not null default gen_random_uuid(),
    "is_active" boolean default true,
    "company_id" uuid not null
);


alter table "public"."customers" enable row level security;

CREATE UNIQUE INDEX assing_customer_pkey ON public.assing_customer USING btree (id);

CREATE UNIQUE INDEX contacts_pkey ON public.contacts USING btree (id);

CREATE UNIQUE INDEX customers_client_email_key ON public.customers USING btree (client_email);

CREATE UNIQUE INDEX customers_client_phone_key ON public.customers USING btree (client_phone);

CREATE UNIQUE INDEX customers_pkey ON public.customers USING btree (id);

alter table "public"."assing_customer" add constraint "assing_customer_pkey" PRIMARY KEY using index "assing_customer_pkey";

alter table "public"."contacts" add constraint "contacts_pkey" PRIMARY KEY using index "contacts_pkey";

alter table "public"."customers" add constraint "customers_pkey" PRIMARY KEY using index "customers_pkey";

alter table "public"."assing_customer" add constraint "public_assing_customer_employee_id_fkey" FOREIGN KEY (employee_id) REFERENCES employees(id) not valid;

alter table "public"."assing_customer" validate constraint "public_assing_customer_employee_id_fkey";

alter table "public"."assing_customer" add constraint "public_assing_customer_equipment_id_fkey" FOREIGN KEY (equipment_id) REFERENCES vehicles(id) not valid;

alter table "public"."assing_customer" validate constraint "public_assing_customer_equipment_id_fkey";

alter table "public"."contacts" add constraint "public_contacts_company_id_fkey" FOREIGN KEY (company_id) REFERENCES company(id) not valid;

alter table "public"."contacts" validate constraint "public_contacts_company_id_fkey";

alter table "public"."contacts" add constraint "public_contacts_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES customers(id) not valid;

alter table "public"."contacts" validate constraint "public_contacts_customer_id_fkey";

alter table "public"."customers" add constraint "customers_client_email_key" UNIQUE using index "customers_client_email_key";

alter table "public"."customers" add constraint "customers_client_phone_key" UNIQUE using index "customers_client_phone_key";

alter table "public"."customers" add constraint "public_customers_company_id_fkey" FOREIGN KEY (company_id) REFERENCES company(id) not valid;

alter table "public"."customers" validate constraint "public_customers_company_id_fkey";

grant delete on table "public"."assing_customer" to "anon";

grant insert on table "public"."assing_customer" to "anon";

grant references on table "public"."assing_customer" to "anon";

grant select on table "public"."assing_customer" to "anon";

grant trigger on table "public"."assing_customer" to "anon";

grant truncate on table "public"."assing_customer" to "anon";

grant update on table "public"."assing_customer" to "anon";

grant delete on table "public"."assing_customer" to "authenticated";

grant insert on table "public"."assing_customer" to "authenticated";

grant references on table "public"."assing_customer" to "authenticated";

grant select on table "public"."assing_customer" to "authenticated";

grant trigger on table "public"."assing_customer" to "authenticated";

grant truncate on table "public"."assing_customer" to "authenticated";

grant update on table "public"."assing_customer" to "authenticated";

grant delete on table "public"."assing_customer" to "service_role";

grant insert on table "public"."assing_customer" to "service_role";

grant references on table "public"."assing_customer" to "service_role";

grant select on table "public"."assing_customer" to "service_role";

grant trigger on table "public"."assing_customer" to "service_role";

grant truncate on table "public"."assing_customer" to "service_role";

grant update on table "public"."assing_customer" to "service_role";

grant delete on table "public"."contacts" to "anon";

grant insert on table "public"."contacts" to "anon";

grant references on table "public"."contacts" to "anon";

grant select on table "public"."contacts" to "anon";

grant trigger on table "public"."contacts" to "anon";

grant truncate on table "public"."contacts" to "anon";

grant update on table "public"."contacts" to "anon";

grant delete on table "public"."contacts" to "authenticated";

grant insert on table "public"."contacts" to "authenticated";

grant references on table "public"."contacts" to "authenticated";

grant select on table "public"."contacts" to "authenticated";

grant trigger on table "public"."contacts" to "authenticated";

grant truncate on table "public"."contacts" to "authenticated";

grant update on table "public"."contacts" to "authenticated";

grant delete on table "public"."contacts" to "service_role";

grant insert on table "public"."contacts" to "service_role";

grant references on table "public"."contacts" to "service_role";

grant select on table "public"."contacts" to "service_role";

grant trigger on table "public"."contacts" to "service_role";

grant truncate on table "public"."contacts" to "service_role";

grant update on table "public"."contacts" to "service_role";

grant delete on table "public"."customers" to "anon";

grant insert on table "public"."customers" to "anon";

grant references on table "public"."customers" to "anon";

grant select on table "public"."customers" to "anon";

grant trigger on table "public"."customers" to "anon";

grant truncate on table "public"."customers" to "anon";

grant update on table "public"."customers" to "anon";

grant delete on table "public"."customers" to "authenticated";

grant insert on table "public"."customers" to "authenticated";

grant references on table "public"."customers" to "authenticated";

grant select on table "public"."customers" to "authenticated";

grant trigger on table "public"."customers" to "authenticated";

grant truncate on table "public"."customers" to "authenticated";

grant update on table "public"."customers" to "authenticated";

grant delete on table "public"."customers" to "service_role";

grant insert on table "public"."customers" to "service_role";

grant references on table "public"."customers" to "service_role";

grant select on table "public"."customers" to "service_role";

grant trigger on table "public"."customers" to "service_role";

grant truncate on table "public"."customers" to "service_role";

grant update on table "public"."customers" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."contacts"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."contacts"
as permissive
for select
to public
using (true);


create policy "update contacts"
on "public"."contacts"
as permissive
for update
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."customers"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."customers"
as permissive
for select
to public
using (true);


create policy "update customers"
on "public"."customers"
as permissive
for update
to authenticated
using (true);



